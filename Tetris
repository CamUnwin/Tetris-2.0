import pygame
import random

# Initialize Pygame
pygame.init()

# Set up the game window
window_width = 800
window_height = 600
window = pygame.display.set_mode((window_width, window_height))
pygame.display.set_caption("Tetris")

# Define colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
CYAN = (0, 255, 255)
MAGENTA = (255, 0, 255)
YELLOW = (255, 255, 0)
ORANGE = (255, 165, 0)

# Define the shapes of the Tetrominoes
shapes = [
    [[1, 1, 1, 1]],  # I-shape
    [[1, 1], [1, 1]],  # O-shape
    [[1, 1, 0], [0, 1, 1]],  # Z-shape
    [[0, 1, 1], [1, 1, 0]],  # S-shape
    [[1, 1, 1], [0, 1, 0]],  # T-shape
    [[1, 1, 1], [0, 0, 1]],  # L-shape
    [[1, 1, 1], [1, 0, 0]]  # J-shape
]

# Define the colors of the Tetrominoes
colors = [
    CYAN,
    YELLOW,
    RED,
    GREEN,
    BLUE,
    ORANGE,
    MAGENTA
]

# Define the size of each Tetromino block
block_size = 30

# Define the number of rows and columns on the game grid
num_rows = window_height // block_size
num_cols = window_width // block_size

# Define the initial position of the falling Tetromino
initial_x = num_cols // 2
initial_y = 0

# Define the game grid
grid = [[BLACK] * num_cols for _ in range(num_rows)]

# Define the current Tetromino and its position
current_tetromino = random.choice(shapes)
current_color = random.choice(colors)
x, y = initial_x, initial_y

# Game loop
running = True
clock = pygame.time.Clock()
fall_time = 0
fall_speed = 0.5

while running:
    # Handle events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Handle player input
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT]:
        x -= 1
    if keys[pygame.K_RIGHT]:
        x += 1
    if keys[pygame.K_DOWN]:
        y += 1

    # Update game logic
    current_time = pygame.time.get_ticks()
    if current_time - fall_time >= 1000 * fall_speed:
        y += 1
        fall_time = current_time

    # Render the game
    window.fill(BLACK)
    for row in range(num_rows):
        for col in range(num_cols):
            pygame.draw.rect(window, grid[row][col], (col * block_size, row * block_size, block_size, block_size))

    # Draw the falling Tetromino
    for row in range(len
